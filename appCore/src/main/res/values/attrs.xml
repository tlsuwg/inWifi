<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!-- image view-->
    <attr name="arrowPosition">
        <enum name="left" value="0" />
        <enum name="right" value="1" />
    </attr>
    <declare-styleable name="ShaderImageViewStyle">
        <attr name="square" format="boolean" />
        <attr name="borderColor" format="color" />
        <attr name="borderWidth" format="dimension" />
        <attr name="borderAlpha" format="float" />
        <attr name="foreground" format="integer|reference" />
        <!-- Rounded Image View -->
        <attr name="imageRadius" format="dimension" />
        <!--BubbleImageView-->
        <attr name="arrowPosition" />
        <attr name="triangleHeight" format="dimension" />
    </declare-styleable>


    <declare-styleable name="Panel">
        <!-- Defines panel animation duration in ms. -->
        <attr name="animationDuration" format="integer" />
        <!-- Defines panel position on the screen. -->
        <attr name="position">
            <!-- Panel placed at top of the screen. -->
            <enum name="top" value="0" />
            <!-- Panel placed at bottom of the screen. -->
            <enum name="bottom" value="1" />
            <!-- Panel placed at left of the screen. -->
            <enum name="left" value="2" />
            <!-- Panel placed at right of the screen. -->
            <enum name="right" value="3" />
        </attr>
        <!-- Identifier for the child that represents the panel's handle. -->
        <attr name="handle" format="reference" />
        <!-- Identifier for the child that represents the panel's content. -->
        <attr name="content" format="reference" />
        <!-- Defines if flying gesture forces linear interpolator in animation. -->
        <attr name="linearFlying" format="boolean" />
        <!-- Defines size relative to parent (must be in form: nn%p). -->
        <attr name="weight" format="fraction" />
        <!-- Defines opened handle (drawable/color). -->
        <attr name="openedHandle" format="reference|color" />
        <!-- Defines close handle (drawable/color). -->
        <attr name="closedHandle" format="reference|color" />
    </declare-styleable>

    <declare-styleable name="swipelistviewstyle">
        <attr name="right_width" format="dimension"></attr>
    </declare-styleable>

    <declare-styleable name="pullshowheader">
        <attr name="showheader" format="boolean"></attr>
    </declare-styleable>
    <declare-styleable name="pullmargintops">
        <attr name="titleheight" format="dimension"></attr>
        <attr name="margintops" format="boolean"></attr>
    </declare-styleable>
    <declare-styleable name="pullshowfoot">
        <attr name="showfoot" format="boolean"></attr>
    </declare-styleable>

    <declare-styleable name="xlistshowheader">
        <attr name="xshowheader" format="boolean"></attr>
    </declare-styleable>

    <declare-styleable name="showViewType">
        <attr name="isSmallView" format="boolean"></attr>
    </declare-styleable>

    <declare-styleable name="StaggeredGridView">
        <attr name="drawSelectorOnTopStag" format="boolean" />
        <attr name="numColumnsStag" format="integer" />
    </declare-styleable>

    <declare-styleable name="PageSlidingIndicator">
        <attr name="indicatorColor" format="color" />
        <attr name="underlineColor" format="color" />
        <attr name="dividerColor" format="color" />
        <attr name="indicatorHeight" format="dimension" />
        <attr name="underlineHeight" format="dimension" />
        <!--<attr name="dividerPadding" format="dimension" />-->
        <attr name="tabPaddingLeftRight" format="dimension" />
        <attr name="scrollOffset" format="dimension" />
        <attr name="tabBackground" format="reference" />
        <attr name="shouldExpand" format="boolean" />
        <!--<attr name="textAllCaps" format="boolean" />-->
        <attr name="isChangeTextSizeBig" format="boolean" />
        <attr name="biggerTextSize" format="dimension" />
        <attr name="bottomLinePadding" format="dimension" />
        <attr name="brand" format="dimension" />
    </declare-styleable>

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
        <attr name="waterpullshowheader" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="MyProgressBar">
        <attr name="progressWidth" format="dimension"></attr>
        <attr name="progressTextColor" format="color" />
        <attr name="progressTextSize" format="dimension" />
        <attr name="max" format="integer"></attr>
    </declare-styleable>

    <declare-styleable name="SwitchButton">
        <attr name="bmWidth" format="dimension"></attr>
        <attr name="bmHeight" format="dimension"></attr>
    </declare-styleable>
    
    <declare-styleable name="WishLayout">
        <attr name="horizontalSpacing" format="dimension"></attr>
        <attr name="verticalSpacing" format="dimension"></attr>

    </declare-styleable>

    <declare-styleable name="CustomImageView">
        <attr name="borderRadius" />
        <attr name="type" />
        <attr name="src" />
    </declare-styleable>
    <declare-styleable name="CircleImageView">
        <attr name="border_width" format="dimension" />
        <attr name="border_color" format="color" />
    </declare-styleable>
    <attr name="borderRadius" format="dimension" />
    <attr name="type">
        <enum name="circle" value="0" />
        <enum name="round" value="1" />
    </attr>
    <attr name="src" format="reference"></attr>
</resources>
